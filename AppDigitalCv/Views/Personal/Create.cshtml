@model AppDigitalCv.ViewModels.PersonalVM
<link href="~/Content/css/cardview.css" rel="stylesheet" />

@using (Html.BeginForm("Create", "Personal", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="bs-container">
        <div class="row">
            <div class="col-xs-7 col-sm-7 col-md-7 col-lg-7">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Datos Generales</h3>
                    </div>
                    <div role="form">
                        <div class="box-body">
                            <div class="form-group">
                                <label for="etNombre">Nombre:</label>
                                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control input-sm", placeholder = "Tu Nombre" })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                <label for="etApellidoPaterno">Apellido Paterno:</label>
                                @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control input-sm", placeholder = "Tu Apellido Paterno" })
                                @Html.ValidationMessageFor(model => model.ApellidoPaterno, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label for="exampleInputPassword1">Apellido Materno:</label>
                                @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control input-sm", placeholder = "Tu Apellido Materno" })
                                @Html.ValidationMessageFor(model => model.ApellidoMaterno, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
                                        <label for="etcurp">Curp:</label>
                                        @Html.TextBoxFor(model => model.Curp, new { @class = "form-control input-sm", placeholder = "Tu Curp" })
                                        @Html.ValidationMessageFor(model => model.Curp, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
                                        <label for="curpInputFile">Cargar Archivo del Curp:</label>
                                        @Html.TextBoxFor(model => model.ArchivoCurp, new { @class = "btn btn-file btn-github", @type = "file" })
                                        @Html.ValidationMessageFor(model => model.ArchivoCurp, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                            </div>
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
                                        <label for="etrfc">Rfc:</label>
                                        @Html.TextBoxFor(model => model.RFC, new { @class = "form-control input-sm", placeholder = "Tu Rfc" })
                                        @Html.ValidationMessageFor(model => model.RFC, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
                                        <label for="curpInputFile">Cargar Archivo del Rfc:</label>
                                        @Html.TextBoxFor(model => model.ArchivoRfc, new { @class = "btn btn-file btn-github", @type = "file" })
                                        @Html.ValidationMessageFor(model => model.ArchivoRfc, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
                                        <label for="ethomoclave">Homoclave:</label>
                                        @Html.TextBoxFor(model => model.HomoClave, new { @class = "form-control input-sm", placeholder = "Homoclave" })
                                        @Html.ValidationMessageFor(model => model.HomoClave, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                            </div>
                            <div class="form-group">
                                <label for="etSemblanza">Semblanza:</label>
                                @Html.TextAreaFor(model => model.strLogros, new { @class = "form-control", rows = 3 })
                                @Html.ValidationMessageFor(model => model.strLogros, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="box-footer">
                            <div>
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            </div>
                            <input type="submit" value="Guardar" class="btn btn-primary" />
                        </div>
                    </div>
                </div>

            </div>
            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
                <div class="row">
                    <div class="box box-info">
                        <div class="box-body box-profile">
                            <div id="imgPreview">
                                <img id="targetImg" alt="User profile picture" src="~/Imagenes/anonimo_perfil.jpg" class="profile-user-img img-responsive img-circle">
                            </div>
                            <h3 class="profile-username text-center">User Admin.</h3>
                            <p class="text-muted text-center">Ingeniero en Software.</p>
                            <ul class="list-group list-group-unbordered">
                                <li class="list-group-item">
                                    <b id="description" class="text-navy">Datos de la Foto: </b>
                                    <a class="pull-right"><span class="fa  fa-camera"></span></a>
                                </li>
                                <li class="list-group-item">
                                    Añade una foto de inicio de perfil para completar tu información.
                                    <a class="pull-right"><span class="fa fa-file-photo-o"></span></a>
                                </li>
                                <li class="list-group-item">
                                    <label for="exampleInputFile">Cargar Foto:</label>
                                    @*<input type="file" id="fotoInputFile" class="btn btn-file btn-github" required>*@
                                    @Html.TextBoxFor(model => model.ImageFile, new { @class = "btn btn-file btn-linkedin", @type = "file",id= "fotoInputFile" })
                                    @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
                                </li>
                               

                            </ul>
                        </div>

                    </div>
                </div>


            </div>
        </div>
    </div>
    @*<div class="form-horizontal">
            <h4>PersonalVM</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>


        <div class="form-group">
                                <label for="exampleInputFile">Cargar Foto:</label>
                                <input type="file" id="fotoInputFile" class="btn btn-file btn-github" required>

                                <p class="help-block">Carga tu fotografía, para tu perfil.</p>
                            </div>

    *@
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/jquery-1.9.1.min.js"></script>
<script src="~/Scripts/toastr.min.js"></script>
<script>
    $(document).ready(function () {
        $("#fotoInputFile").change(function () {

            var File = this.files;
            if (File && File[0]) {
                ReadImage(File[0]);
            }
        })
    })
    var ReadImage = function (file) {

        var reader = new FileReader;
        var image = new Image;
        ///leemos un documento de una URL
        reader.readAsDataURL(file);
        reader.onload = function (_file) {
            image.src = _file.target.result;
            image.onload = function () {

                var height = this.height;
                var width = this.width;
                var type = file.type;
                var size = ~~(file.size / 1024) + "KB";

                $("#targetImg").attr('src', _file.target.result);
                $("#description").text("Tamaño de la Foto: " + size);
                $("imgPreview").show();
                toastr.success("Fotografía es Cargada Correctamente").show();
            }

        }

    }
    ///esta funcion se encarga de subir una imagen hacia el servidor
    var Uploadimage = function () {

        var file = $("#targetImg").get(0).files[0];
        var data = new FormData;
        data.append("ImageFile", file[0]);
        $.ajax({
            type: "Post",
            url: "/",
            data: data,
            contentType: false,
            processData: false,
            success: function (response) {
                toastr.success("Fotografía es Cargada Correctamente").show();
            }
        })
    }


</script>
